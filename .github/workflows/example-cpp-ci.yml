name: sample for builing cpp project with diffent os and libc++

on:
    workflow_dispatch:
    push:
      branches:
        - cpp-ci-template


jobs:
    linux-gcc:
        name: Linux GCC
        runs-on: ubuntu-22.04
        env:
            CC: gcc-12
            CXX: g++-12
        steps:
            - uses: actions/checkout@v4
            - run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential ninja-build g++-12 libstdc++-12-dev
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    linux-clang-libcpp:
        name: Linux Clang (libc++)
        runs-on: ubuntu-22.04
        env:
            CC: clang-14
            CXX: clang++-14
            CXXFLAGS: -stdlib=libc++
        steps:
            - uses: actions/checkout@v4
            - run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential ninja-build clang-14 libc++-14-dev libc++abi-14-dev
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    linux-clang-libstdcpp:
        name: Linux Clang (libstdc++)
        runs-on: ubuntu-22.04
        env:
            CC: clang-14
            CXX: clang++-14
            CXXFLAGS: -stdlib=libstdc++
        steps:
            - uses: actions/checkout@v4
            - run: |
                  sudo apt-get update
                  sudo apt-get install -y build-essential ninja-build clang-14 libc++-14-dev libc++abi-14-dev libstdc++-12-dev
            - name: show clang and version
              shell: bash
              run: |
                   clang --version
                   clang-14 --version
                   clang++-14 --version
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    mac-apple-clang:
        name: macOS AppleClang
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
            - run: brew install make ninja cmake
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    mac-gcc:
        name: macOS GCC
        runs-on: macos-12
        env:
            CC: gcc-13
            CXX: g++-13
        steps:
            - uses: actions/checkout@v4
            - run: brew install ninja gcc@13 cmake
            - name: show gcc version
              shell: bash
              run: |
                    gcc-13 --version
                    g++-13 --version
                    gcc --version
                    which gcc
                    which g++
                    file `which gcc`
                    file `which g++`
                    echo "/usr/local/opt/make/libexec/gnubin" >> $GITHUB_PATH
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    mac-clang-libcpp:
        name: macOS Clang (libc++)
        runs-on: macos-latest
        env:
            CC: /usr/local/opt/llvm/bin/clang
            CXX: /usr/local/opt/llvm/bin/clang++
            CXXFLAGS: -stdlib=libc++
        steps:
            - uses: actions/checkout@v4
            - run: brew install make ninja llvm@17 cmake
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    mac-clang-libstdcpp:
        name: macOS Clang (libstdc++)
        runs-on: macos-latest
        env:
            CC: /usr/local/opt/llvm/bin/clang
            CXX: /usr/local/opt/llvm/bin/clang++
            CXXFLAGS: -stdlib=libstdc++ -isystem /usr/local/opt/gcc@13/include/c++/13 -isystem /usr/local/opt/gcc@13/include/c++/13/x86_64-apple-darwin20 -Wno-stdlibcxx-not-found
            LDFLAGS: -L/usr/local/opt/gcc@13/lib/gcc/13 -Wl,-rpath,/usr/local/opt/gcc@13/lib/gcc/13
        steps:
            - uses: actions/checkout@v4
            - run: brew install make ninja llvm@17 gcc@13 cmake
            - run: /bin/bash .ci/install-vcpkg.sh
            - run: /bin/bash .ci/build-project.sh
            - run: ./build/src/show_info/show_info
            - run: ./build/src/example/example
            - run: ctest --output-on-failure --test-dir build

    windows-msvc:
        name: Windows MSVC
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
            - run: .ci\install-vcpkg.ps1
            - run: .ci\build-project.ps1
            - run: .\build\src\show_info\Debug\show_info.exe
            - run: .\build\src\example\Debug\example.exe
            - run: ctest --output-on-failure --test-dir build -C Debug

    windows-clang-cl:
        name: Windows Clang-cl
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
            - run: .ci\install-vcpkg.ps1
            - run: .ci\build-project-with-clang-cl.ps1
            - run: .\build\src\show_info\show_info.exe
            - run: .\build\src\example\example.exe
            - run: ctest --output-on-failure --test-dir build -C Debug