name: static build for zsh

on:
    workflow_dispatch:
    push:
      branches:
        - zsh_build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - id: 'linux-amd64'
            os: 'ubuntu-latest'
            tar_extra_args: ''
        arch:
            ['aarch64-linux-musl',
            'arm-linux-musleabi',
            'arm-linux-musleabihf',
            'armv6-linux-musleabihf',
            'armv7l-linux-musleabihf',
            'i686-linux-musl',
            'mips-linux-musl',
            'mips64-linux-musl',
            'mips64el-linux-musl',
            'mipsel-linux-musl',
            'powerpc-linux-musl',
            'powerpc64le-linux-musl',
            'riscv64-linux-musl',
            's390x-linux-musl','x86_64-linux-musl'
            ]    
      fail-fast: false

    # container:
    #     image: userdocs/qbt-mcm:${{ matrix.arch }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
            fetch-depth: 20
      - name: Install `ninja` on Ubuntu
        if: startsWith(matrix.target.id, 'linux-')
        shell: bash
        run: |
          sudo apt install ninja-build tree -y

      - name: prepare toochain and show info
        shell: bash
        run: |
          wget https://github.com/userdocs/qbt-musl-cross-make/releases/download/2406/${{ matrix.arch }}.tar.xz
          tar xvf ${{ matrix.arch }}.tar.xz
          gcc --version
          ${{ matrix.arch }}/bin/${{ matrix.arch }}-gcc --version
          tree -L 3
          
      - name: Build
        shell: bash
        run: |
          ./scripts/build_zsh.sh ${{ matrix.arch }}


      - name: Set up QEMU
        if: startsWith(matrix.arch, 'aarch64-')
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64 

      - name: Run the build process with Docker
      ##https://github.com/orgs/community/discussions/38728#discussioncomment-6324428
        if: startsWith(matrix.arch, 'aarch64-')
        shell: bash
        run: |
          echo "run command in different arch"
          docker run \
            --rm \
            -v $(pwd):/${{ github.workspace }} \
            -w ${{ github.workspace }} \
            --platform linux/arm64 \
            ubuntu:jammy \
            uname -a ;ls -alSh;ls -alSh ${{ matrix.arch }}_dist/bin;${{ matrix.arch }}_dist/bin/zsh --version\

     
      - name: Zip
        shell: bash
        run: |
          mkdir -p dist
          tar --directory ${{ matrix.arch }}_dist --create --xz --verbose ${{ matrix.target.tar_extra_args }} --file dist/zsh_build.tar.xz .
          ls -lh dist/zsh_build.tar.xz

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-zsh
          path: dist
          if-no-files-found: error
          retention-days: 7